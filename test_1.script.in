topology
8 8 8 8 8

# 'first_node' is the name (fixed) of first implicit node.
# Next line will specify the positions. The elderships are all 0.

first_node
3 5 7 1 0

print_info first_node

# 'add_neighbor' will add a neighbor without doing a previous reserve.
# * The following 'lower_pos' subcommand will specify the lower positions; thus, the level is specified too.
# * The following 'elderships' subcommand will specify the upper elderships.

add_neighbor n1 to first_node
lower_pos 3 2 7
elderships 0 0 1

wait_msec 200

print_info n1

# 'request_reserve' will make a node to query for a reservation at the specified level.
# * The following 'accept' subcommand asserts that the reserve succeeded, and add a neighbor to the same node.
# * In the same 'accept' subcommand we put the neighbor's name and the lower positions (maybe empty).

request_reserve to first_node level 3
accept n2 lower_pos 5 4

wait_msec 200

print_info n2

# 'request_reserve' has another form.
# * The following 'expect' subcommand can be 'ok' or 'node_not_ready' or 'invalid_level' or 'saturated_gnode'.
# * In any case the neighbor is not added.

request_reserve to first_node level 3
expect ok

request_reserve to n1 level 3
expect ok

request_reserve to n2 level 3
expect ok

request_reserve to first_node level 3
expect ok

request_reserve to n1 level 3
expect ok

request_reserve to n2 level 3
expect saturated_gnode

request_reserve to n2 level 2
accept n3 lower_pos 7

wait_msec 200

print_info n3

